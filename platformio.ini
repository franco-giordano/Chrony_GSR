; ; PlatformIO Project Configuration File
; ; https://docs.platformio.org/page/projectconf.html

[env:watchy]
platform = espressif32
framework = arduino

platform_packages = framework-arduinoespressif32 @ 3.20006.221224

board = watchy
board_build.partitions = min_spiffs.csv
    ; board_build.hwids = 10C4, EA60  ; The CP2102N used on Watchy
monitor_speed = 115200

lib_ldf_mode = deep+  ; Needed to plumb the depths of library dependencies
lib_deps =
    https://github.com/GuruSR/Olson2POSIX.git#66bca41
    https://github.com/GuruSR/SmallNTP.git#f1c21fc
    https://github.com/GuruSR/SmallRTC.git#a1c8a33
    https://github.com/GuruSR/StableBMA.git#dd1e035
    https://github.com/tzapu/WiFiManager.git#v2.0.15-rc.1
    https://github.com/orbitalair/Rtc_Pcf8563.git @ 1.0.3
    sqfmi/Watchy @ 1.4.5
    arduino-libraries/Arduino_JSON @ 0.2.0
    Arduino_JSON @ 0.2.0

lib_ignore = 
    elpaso/Rtc_Pcf8563
    esp32dev/Rtc_Pcf8563

;;; For debugging, try these
build_type = debug
monitor_filters = esp32_exception_decoder
build_flags = -D ARDUINO_WATCHY_V20


; [env:watchy]
; platform = espressif32
; framework = arduino

; ; The current arduino-ESP32 platform (2.0.3) seems to have issues with
; ; esp_sleep_get_wakeup_cause() not working right, leading to boot loops.
; ; Pin to the previous version (2.0.2) which works better.
; platform_packages = framework-arduinoespressif32 @ 3.20002.220503

; board = esp32dev  ; TODO: Make a board definition for Watchy?
; board_build.partitions = min_spiffs.csv
; board_build.hwids = 10C4, EA60  ; The CP2102N used on Watchy
; monitor_speed = 115200

; lib_ldf_mode = deep+  ; Needed to plumb the depths of library dependencies
; lib_deps =
;     https://github.com/GuruSR/Olson2POSIX.git
;     https://github.com/GuruSR/SmallNTP.git
;     https://github.com/GuruSR/SmallRTC.git
;     https://github.com/GuruSR/StableBMA.git
;     https://github.com/tzapu/WiFiManager.git  ; unused, needed to build Watchy
;     https://github.com/orbitalair/Rtc_Pcf8563.git
;     sqfmi/Watchy

; ;;; For debugging, try these
; ; build_type = debug
; ; monitor_filters = esp32_exception_decoder

extra_scripts = pre:apply_patches.py
